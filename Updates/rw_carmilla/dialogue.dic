//Everything in this file is commented out on purpose. Only uncomment functions that you're planning to use! FLUX checks for the EXISTENCE of a function, and if the function exists, it executes it rather than doing the default behavior. It does not check if there's actually anything IN the function. So if you're not using one of these functions, comment it out or erase it!

//Also, I will reiterate again: Try not to use the base SHIORI functions found on Ukadoc here! I may update FLUX in the future to have that same function, and then your shell's custom code wouldn't work anymore until you update it! If you really need one, ask me about it and I can consider adding the function to FLUX so you can use it. And if you're doing really complex stuff, you might just want to make your own ghost lol

//For the same reason, if you're adding new custom functions, try to give them fairly unique names! Same with variables, especially. More notes about this in the documentation file.


//Write the current version of your shell here, and it'll be noted on the main menu. Try it out!
shellver
{
	//"0.1.2"
}

//Set up the path to your tray icon here, and it'll automatically change to it whenever your shell is loaded. Note that you'll need to keep the /../../shell/ part as it is, just edit the path after that
OnCustom_trayicon
{
	"\![set,tasktrayicon,/../../shell/rw_carmilla/CarmillaGhostIcon.ico]"
}

//Custom dialogue for when FLUX is booted. If you want, you can use the _timesince bit I've commented out for the number of days since FLUX was last loaded. Note that a notify command and trayicon command will always happen before any dialogue. Uses the same references as OnBoot.
OnCustom_OnBoot
{
	//_timesince = FUNCTIONEX("time_check.dll","how_many_days",lastclosed[0],lastclosed[1],lastclosed[2],0,0,0) * -1
	"\0\s[0]\w5\w3Ah, if it isn't my favorite patient.\nBack for another song?\w3\w9\w9\e"
}

//Custom dialogue for when FLUX is closed. Note that the command to stop sound and a notifyother command will always happen first. Also, don't end dialogues here with a \e, FLUX automatically appends \w8\w8\-\e at the end of any dialogues here. Uses the same references as OnClose.
OnCustom_OnClose
{
	"\0\w4\s[0]\w3Thank you for attending my performance.\nDo tell me if you see any of my Mechanisms around.\w3\w9\w5\- \e"
}

//Custom dialogue when FLUX is swapping to another ghost. Same notes as above. Uses the same references as OnGhostChanging.
OnCustom_OnGhostChanging
{
	"\0\w4\s[0]\w3Thank you for attending my performance.\nDo tell me if you see any of my Mechanisms around.\w3\w9\w5\- \e"
}

//Custom dialogue when FLUX was switched to from another ghost. If you want, you can use the _timesince bit I've commented out for the number of days since FLUX was last closed. Note that a notify command will always happen before any dialogue. Uses the same references as OnGhostChanged.
OnCustom_OnGhostChanged
{
	//_timesince = FUNCTIONEX("time_check.dll","how_many_days",lastclosed[0],lastclosed[1],lastclosed[2],0,0,0) * -1
	"\1\s[10]\0\s[0]You want to hear me play? Finally, someone with taste.\s[0]\e\w9\w9"
}

//Custom dialogue when changing away from a shell. Uses the same references as OnShellChanging.
OnCustom_OnShellChanging
{
	"\0\w4\s[0]\w3Thank you for attending my performance.\nDo tell me if you see any of my Mechanisms around.\w3\w9\w5\e"
}

//Custom dialogue after changing to a new shell. If you have any issues with this function not being called properly, please let me know! The whole shell change system is a little slow/janky because it has to copy over all of the information in this file, and then reload itself, before it can run this dialogue. Reference values here should be the same as OnShellChanged.
OnCustom_OnShellChanged
{
	"\1\s[10]\0\s[0]You want to hear me play? Finally, someone with taste.\s[0]\e\w9\w9"
}

//Custom dialogue for the randomtalk function. Having this function in your file will enable the 'say something' option on the main menu! I included an example if/else for splitting up your dialogue into singing vs idle dialogue, but you can ignore that if you want. If you want to use it, you'll need to create the Custom_SingingDialogue and Custom_IdleDialogue functions!
//Note, the Singing function returns 1 if FLUX is playing music, and 0 if it's not.
OnCustom_RandomTalk
{
	if Singing; Custom_SingingDialogue //This will be called if FLUX is playing music
	{
		"\0\s[25]I am the girl that they ignored\w4\n\nAs they packed their possessions\w2\nAnd fled from the shore\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]One day I'll be somebody else:\w6\nA rocket girl\w4\nRocket, rocket girl\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]Whilst angels slept in blackened snow\w4\nUnearthing bones 'midst sticks and stones\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]I am a firecracker disguised as a girl\w4\nI am self-hating predator\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]I'm Carmilla,\w4\n(That's 'Docteur' to you)\w4\nYou can run or you can try to hide,\w4\nBut that won't protect you from,\w4\nThat won't protect you from the truth\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]For my c\w1r\w1i\w1m\w1e\w1s\w4\nI'll watch the galaxy burn\w4\nAs everything I love turns to shit\w4\nand I'm wading through the dead of it\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]And all the tears I've cried,\w4\nSo many times I thought that I had died,\w4\nBut somehow I survived\w2.\w2.\w2.\w4\nAlive\w2.\w2.\w2.\w4\nAm I alive?\w9\w9\w9\w9\e"
		"\0\s[25]And I am fortune's fool for being in love\w4\nWith an image of what you once were\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]Oh,\w2 Loreli\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]Can you hear us?\w4\nOr are you too involved to see?\w4\nInvisible dress-up dolls,\w4\nLined up and eager to please\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]Marching victims, women of war\w4\nEleven more coffins filled with roses\w4\nThey dried off their tears and hushed their despairs,\w4\nyet erect stood the cannons that had buried them there\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]Dig, dig my darling,\w4\nWe're going underground\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]Tick-tock, tick-tock:\w2 The movement of a heart\w4\nTick-tock, tick-tock:\w2 Winding down\w4\nCold as the murder that you made into an art\w4\nHush, my darling- listen to the\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]愛\w1し\w1て\w1る\w1け\w1ど\w1、\w4\n大\w1嫌\w1い\w1。\w4\n気\w1持\w1ち\w1悪\w1い\w1よ\w1。\w4\nさ\w1よ\w1う\w1な\w1ら、\w4\n私\w1の\w1好\w1き\w1な\w1人\w1,\w4\nL\w1o\w1r\w1e\w1l\w1i\w4\nOh, my Loreli\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]I remember better days\w4\nWhen you laughed and danced in the cold snowflakes\w2.\w2.\w2.\w9\w9\w9\w9\e"
		"\0\s[25]The demons of your past\w4\nCan be driven from this abattoir\w4\nWhen the time comes,\w4\nI shan’t be far\w2.\w2.\w2.\w9\w9\w9\w9\e"
	}
	else; Custom_IdleDialogue //This will be called if FLUX is NOT playing music
	{
		"\1\s[10]\0\s[0]Did you know I used to have a band? \w4 The Mechanisms, they were called. \w4 We parted ways some years ago\w4.\w4.\w4. When they threw me from an airlock. \w2A\w2g\w2a\w2i\w2n\w2.\s[0]\e\w9\w9"
		"\1\s[10]\0\s[0]So this is the inside of a computer?\w1 It's not quite like the last one I was in. \w4I suppose I was overdue for a change of scenery.\s[0]\e\w9\w9"
		"\1\s[10]\0\s[0]Trapped inside an antiquated computer\w2.\w2.\w2.\w4 Where is Nastya when you need her the most, eh?\s[0]\e\w9\w9"
		"\1\s[10]\0\s[0]When you're as old as I am, life becomes a reverie. Eras rise and fall like the tide. Stories are the only constant thing.\w2 Well, that and humanity's hubris.\w2 That's why I sing so many tragedies. They're immortal, just like I am.\w2 \s[0]\e\w9\w9"
		"\1\s[10]\0\s[0]I tried gender once.\w3 Didn't like the taste.\s[0]\e\w9\w9"
		"\1\s[10]\0\s[0]Music is the best way to get to know someone, and I'd l\w4o\w4v\w4e\w4 to know what makes you tick.\w9\w9\e"
	}
}

//This is inserted into the main menu, between the Shell/Dressup options and the Config option. This is really just for if you want to add a couple simple questions or something the user could ask your character, but if you want to add something else, go for it. Just don't break stuff haha. Note that the menu options before and after it automatically have linebreaks for it.
//OnCustom_Menu
//{
	
//}

//Custom dialogue pool for being pet! This function is specifically called when the player moves their mouse over the "stroke_p" hitbox for a short while, which is usually the head. FLUX uses the variable totalpets to track the total number of times FLUX has been pet; if you want to track this for your shell specifically you'll need to add a custom variable! Make sure the name is very definitely unique, though. sanspets would be too generic, but zichqec_sanspets would be unique enough that it should never overlap with anyone else's. Uses the same references as OnMouseMove.
OnCustom_Petting
{
	"\0\s[1]\w5 . \w5 . \w5 . \w9\w9\w9\nI assure you, I have some concept of dignity.\w9\w9\w9\w9\w9\w9\b[-1]\e"
	"\0\s[1]\w5 . \w5 . \w5 . \w9\w9\w9\w9\w9\w9\w9\w9\w9\b[-1]\e"
	"\0\s[1]\w5 . \w5 . \w5 . \w9\w9\w9\nWhile I know I'm worthy of adoration, if you ruin my hair I'll have no choice but to exsanguinate you.\w9\0\s[0]\nPainfully.\w9\w9\w9\w9\w9\w9\b[-1]\e"
	"\0\s[1]\w5 . \w5 . \w5 . \w9\w9\0\s[0]\w9\nAre you t\w2r\w2y\w2i\w2n\w2g\w2 to skew my data?\w9\w9\w9\w9\w9\w9\b[-1]\e"
}

//If you want to get a little more detailed with your stroking dialogues, you can set them up in this function. Note that this one is specifically for the Sakura character! If the user has their cursor over any hitboxes other than "stroke_p", this function will be called instead. Uses the same references as OnMouseMove.
//OnCustom_MouseMoveSakura
//{
	
//}

//This is the same as the above function, but it will happen for any characters other than the Sakura! You only need this if you have more than one character. Uses the same references as OnMouseMove.
//OnCustom_MouseMoveExtra
//{
	
//}

//If the user double clicks on an area of the Sakura with a hitbox it doesn't recognize for anything else (like the hotspots for the music player, or the menu), this function will be called instead. Note that if the user clicks on an area with no hitbox, it'll open the main menu! This uses the same references as OnMouseDoubleClick.
//OnCustom_MouseDoubleClickSakura
//{
	
//}

//If the user double clicks on a character other than the Sakura, this function will be called instead. Uses the same references as OnMouseDoubleClick.
//OnCustom_MouseDoubleClickExtra
//{
	
//}

//If the Sakura and Kero start overlapping. Uses the same references as OnOverlap, but will ONLY be called if the Sakura and Kero started overlapping.
//OnCustom_Overlap
//{
	
//}

//If the Sakura and Kero stop overlapping, or any other characters start/stop overlapping. Uses the same references as OnOverlap. Sorry if this is a little confusing, but I wanted to offer a simple overlap pool while also offering the full possibilities of OnOverlap. Make sure you check out Ukadoc's information about OnOverlap if you're not sure how to use this!
//OnCustom_OverlapExtra
//{
	
//}

//Called from OnSurfaceRestore if FLUX is NOT playing music. If this function does not exist, FLUX will set the Sakura to surface0 and the Kero to surface -1 by default. If you want to have a Kero character, or you want multiple/different idle frames, fill them in here! Note that this function is called in several places, so it does not have a consistent set of reference values. Instead, you can use one of YAYA's built-in arrays to determine which surfaces your shell is in. SHIORI3FW.LastSurface[0] would be the current surface number of the Sakura, SHIORI3FW.LastSurface[1] would be the current surface number of the Kero, etc. Note that these are stored as integers.
//OnCustom_IdleSurfaces
//{
	
//}

//Sister to the above, but this is for if FLUX is currently playing music. If this function does not exist, FLUX will set the Sakura to surface25, and the Kero to surface -1 by default. You need to keep at least one singing animation on surface25! Otherwise, go wild and add any additional surfaces you want here! Note that this function is called in several places, so it does not have a consistent set of reference values. Instead, you can use one of YAYA's built-in arrays to determine which surfaces your shell is in. SHIORI3FW.LastSurface[0] would be the current surface number of the Sakura, SHIORI3FW.LastSurface[1] would be the current surface number of the Kero, etc. Note that these are stored as integers.
//OnCustom_SingingSurfaces
//{
	//if SHIORI3FW.LastSurface[0] != 25 //You can erase this if you want. If you set it up like this, your ghost won't change surfaces if it's already in the singing pose, and that way it won't be interrupted. You can also add more surface numbers here if you have multiple singing poses!
	//{
		//"\s[25]"
	//}
//}

//These surfaces are the ones for when the user uses etc functions. They're called through an embed tag; reference0 will be "Error" if the function ends in an error, "Refuse" if it ends in something minor (like trying to add songs of an incompatible type), and "Action" if it's a normal action. You can skip this if check and just make it a single surface if you want! It's just so you can have your shell frown if something goes wrong, etc.
//OnCustom_ActionSurfaces
//{
	//if reference0 == "Error"
	//{
		
	//}
	//elseif reference0 == "Refuse"
	//{
		
	//}
	//else
	//{
		
	//}
//}

//Custom responses to Commu dialogues! Please be careful with this haha. Note that FLUX will always send its current stats after every commu. FLUX is also set up so that it won't respond unless no balloon is open. If it receives a message while the balloon is open, it will store it and respond later. You can use the ConvoTag variable here to send information back and forth that the user can't see, if you're not sure how this system works then ask me about it and I'll show you. My other ghosts make extensive use of it, and I'm planning to write a guide eventually. References are the same as OnCommunicate.
//OnCustom_Commu
//{
	
//}

//Want to send some custom stats when your shell is pinged via commu? You can do that here if you like! DO NOT INCLUDE COMMAS IN THIS. IT WILL BREAK THE SIMPLE ARRAY THAT SENDS THE STATS. Try using | or something similar as a delimiter instead, and have the other ghost break it down on their side with SPLIT!
//OnCustom_CommuStats
//{
	//"%(somestat1)|%(somestat2)|%(somestat3)"
//}

//This is for when the user sets their birthday, and it just so happens to be the current day. The 'birthday' array contains all the information about their birthday. If you want to say the birthday in this format: 'May 8th', you can use bitrhday[0]. For other formats, or to get just the month or day, please refer to the reference in fx_nameteach.dic, above the OnUserBornMonth function.
//Note, a couple linebreaks and then buttons to go back to config menu are automatically placed after this dialogue. Don't end it with a \e!
//OnCustom_BirthdaySet
//{
	
//}

//Custom dialogue for when the year rolls over at midnight! References are the same as OnSecondChange.
//OnCustom_NewYear
//{
	
//}

//Custom dialogue for if another ghost has been uninstalled. This will be called if FLUX is switched to when another ghost was running alone and was uninstalled, or if FLUX is open when another ghost is uninstalled. Uses the same references as OnVanished.
//OnCustom_OnVanished
//{
	
//}

//Need to test some code? Here's a test variable specific to your shell. Type %(debug = 1) in script input to get this to show up on the main menu! Also, remember to reload your shell.
//OnCustom_TestFunc
//{
	
//}